Topic : kubectl install , eksctl install , configuration file.

mysql directory :

/var/lib/mysql
/var/lib/mysqld - conffiguration 
/docker-entrypoint-initbd.d - scrpits 

. genneraly we keep databases out of containers.

.what are the disadvantages in docker :-
****************************************

* Ther is no relibility since the is only one docker host.
* there is no autoscaling
* there is no load balancing.
* volumes are inside docker host  are in poor volume management
* secutity and no secret management.
* no communication b/w containers in another host  and network management is not good

  * Due to  this cases we are using orchestration . 
    for docker we have docker swarm all this future are little poor and tougfer in management as well 
	in kubernetes we can do easly .
	
    
 -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                      Kubernetes
									  **********

. Commands :-
*************
* kubectl ---> k8 client command ( just like mysql command line)
* eksctl --->  it will manage the cluster like create ,update, delete the cluster 
 
  . we will use this both the command to
    create the cluster
    and one for
  . to communication with cluster 
  
  * Create a instace t2.micro with 50 gb storage .
  
  . re-size for more storage to /var 
  . run curl https://raw.githubusercontent.com/Raidi13/expense-docker/refs/heads/main/install-docker.sh | sudo bash
  . install docker  
 
 . install kubectl : 
 *****************
    *curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.31.0/2024-09-12/bin/linux/amd64/kubectl
	* chmod +x ./kubectl
    * sudo mv kubectl /usr/local/bin/kubectl ( if you worngly enter use *sudo mv /worng path /correct path )mv is move
	* kubectl version 

 . install eksctl:-
   **************

    * ARCH=amd64
	* PLATFORM=$(uname -s)_$ARCH
	* curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"

	# (Optional) Verify checksum
	   curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check

	*tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
	* sudo mv /tmp/eksctl /usr/local/bin
	* eksctl version
	. run aws conffiguration 
 
 
 . spot instances:-
   ***************
   . spot instances are unused capacity in data centers that will be give as 90 % discount.\
      when aws required capacity to ondemand client they take back instances with in 2 mins
	  
	. Those spot instances we can use in dev enivorment and Q/a .

  .conffiguration file:-
  **********************
  apiVersion: eksctl.io/v1alpha5
  kind: ClusterConfig

  metadata:
    name: expense-1
    region: us-east-1

  managedNodeGroups:
   - name: ng-1
     instanceType: m5.large
     desiredCapacity: 10
	 spot: true
	 
 * eksctl create cluster --config-file=eks.yaml --> to create a cluster
 
 ---------------------------------------------------------------------------------
 Resources:
 -----------
 
 Name spaces:-just like vpc you will have a dedicated isolated project to create your 
 ***********  workloads/resources
             (for a project there will be dedicated location that we have to use)
		
		
		apiversion: v1
kind: Namespaces
metadata:
   names: expense
   labels:
    project: expense
    enviroment: dev
	
	. command to apply :- kubectl apply -f 01-namespace.yaml
	  -------
    . to view the name spaces  ---> kubectl get namespaces
	. if you want to delete   -->kubectl delete -f namespace
	
 .pod :- is the smallest deployable unit in kubernetes . pod can contain one or many containers.
 *****
  command :- kubectl apply -f 02-pod.yaml
  -------    kubectl get pods
			 
	How can you login to running pod :- kubectl exec -it  nginx --bash .
	
			 
  . pod vs containers :-
    *****************
    1.pod is the smallest deployable unit in kubernetes.
    2.pod can contain one or many containers.
    3.Container in a pod can share same network identity and storage
	4 This are use in sidecar and proxi patterns .
 
 . multi-containers.yaml:-
  ***********************
  
  .can to pod have same name :- No it is a conflite
  
  exmpl:- pod 1 have nginx container is there
		  pod 2 can have  nginx container or not    
		  
	A , the identity of 1st nginx is pod 1 as well the identity 0f 2nd nginx is pod 2 
	    this names are diffrent inside anything can keep .
		
	exmpl 2 :- pod 2 name with  nginx
	           nginx with name  also nginx
			   
   ** crashloop backoff:-
   **********************
   
   . Container is not able to start with out this kubernetes will not there it will re-start.
   
   .if you face error (pod update may not change fields other that) at this time delete the container 
    and re-build.
	 ( kubectl delete -f 03-multi-containers.yaml)
	 (kubectl apply -f 03-multi-containers.yaml)
	 (kubectl get pods)
	* u have two containers u want to login in to 1 container.
	(kubectl exec -it multi-container -c almalinux --bash)

